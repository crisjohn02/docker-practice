version: '3'
services:

  fluent-db:
    image: mysql
    container_name: fluent-db

    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=fluent
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-dump:/var/www/db
    networks:
      - some-network

  fluent-fpm:
    # image: jkaninda/laravel-php-fpm:8.3
    build:
      context: ./services/php8.2
      dockerfile: Dockerfile
    container_name: fluent
    restart: unless-stopped     
    volumes:
        - ./fluent:/var/www/html
        # - ./services/php8.2/fpm-sock.conf:/usr/local/etc/php-fpm.d/fpm-sock.conf
    networks:
        - some-network
    depends_on:
      - fluent-db

  # express-fpm:
  #   image: jkaninda/laravel-php-fpm:8.3
  #   container_name: express
  #   restart: unless-stopped     
  #   volumes:
  #       - ./express:/var/www/html
  #   networks:
  #       - some-network
  #   depends_on:
  #     - fluent-db

    #Nginx server
  fluent-server:
    build: 
      context: ./services/nginx
      dockerfile: Dockerfile
      # args:
      #   PORT: 8000
    container_name: fluent-nginx
    restart: unless-stopped
    volumes:
    - ./fluent:/var/www/html
    environment:
      - DOCUMENT_ROOT=/var/www/html/public
      - CLIENT_MAX_BODY_SIZE=20M
      - PHP_FPM_HOST=fluent:9000
    networks:
    - some-network
    labels:
      - "traefik.http.routers.fluent-server.rule=Host(`fluent.ssr.test`)"
      # - "traefik.port=8081"
    depends_on:
      - fluent-fpm

  # express-server:
  #   build: 
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #     # args:
  #     #   PORT: 8001
  #   container_name: express-nginx
  #   restart: unless-stopped
  #   # ports:
  #   # - 80:8001
  #   volumes:
  #   - ./express:/var/www/html
  #   environment:
  #     - DOCUMENT_ROOT=/var/www/html/public
  #     - CLIENT_MAX_BODY_SIZE=20M
  #     - PHP_FPM_HOST=/var/run/php/php8.2-fpm.sock
  #   networks:
  #   - some-network
  #   labels:
  #     - "traefik.http.routers.express-server.rule=Host(`express.ssr.test`)"
  #     # - "traefik.port=8082"


  reverse-proxy:
    image: traefik:v2.10

    command: --api.insecure=true --providers.docker

    ports:
      - "80:80"
      - "8080:8080"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    
    networks:
      - some-network
    depends_on:
      - fluent-server
      # - express-server

        
networks:
  some-network:
   driver: bridge

volumes:
  mysql-data:
    driver: local
    name: mysql-volume